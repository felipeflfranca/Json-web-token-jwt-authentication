{"ast":null,"code":"var _jsxFileName = \"/Users/felipefranca/Documents/Projetos/React-Native-iOS-Android-e-Web/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react';\nimport { SafeAreaView, ScrollView, StatusBar, StyleSheet, Text, View, Platform, Pressable, Animated, Easing, useColorScheme } from 'react-native';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst isNative = Platform.OS !== 'web';\n\nconst App = () => {\n  _s();\n\n  const [wasRotated, setwasRotated] = useState(false);\n  const spinValue = useRef(new Animated.Value(0)).current;\n  const isDarkMode = useColorScheme() === 'dark'; //'http://localhost:3000/logo.png'\n\n  console.log(Platform.OS);\n\n  const onPress = () => {\n    setwasRotated(!wasRotated);\n    Animated.timing(spinValue, {\n      toValue: wasRotated ? 0 : 1,\n      duration: 250,\n      easing: Easing.linear,\n      useNativeDriver: true\n    }).start();\n  };\n\n  const spin = spinValue.interpolate({\n    inputRange: [0, 1],\n    outputRange: ['0deg', '360deg']\n  });\n  return /*#__PURE__*/_jsxDEV(SafeAreaView, {\n    style: styles.scrollView,\n    children: [/*#__PURE__*/_jsxDEV(StatusBar, {\n      barStyle: isDarkMode ? 'light-content' : 'dark-content'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ScrollView, {\n      contentInsetAdjustmentBehavior: \"automatic\",\n      style: styles.scrollView,\n      contentContainerStyle: styles.scrollView,\n      children: /*#__PURE__*/_jsxDEV(View, {\n        style: styles.container,\n        children: [/*#__PURE__*/_jsxDEV(Animated.Image, {\n          source: isNative ? require('./logo.png') : 'http://localhost:3000/logo.png',\n          style: [styles.logo, {\n            transform: [{\n              rotate: spin\n            }]\n          }]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Pressable, {\n          onPress: onPress,\n          style: styles.button,\n          children: /*#__PURE__*/_jsxDEV(Text, {\n            style: styles.buttonText,\n            children: [\"Clique para o John \", /*#__PURE__*/_jsxDEV(Text, {\n              style: styles.smallText,\n              children: \"dar ou\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 34\n            }, this), \"Travolta\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"ozyJdcuiEklrbFqiKoP4BlNUGqk=\", false, function () {\n  return [useColorScheme];\n});\n\n_c = App;\nconst styles = StyleSheet.create({\n  scrollView: {\n    width: '100%',\n    flex: 1\n  },\n  container: {\n    flex: 1,\n    backgroundColor: '#282c34',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  logo: {\n    width: 300,\n    height: 300\n  },\n  smallText: {\n    fontSize: 9\n  },\n  title: {\n    color: '#fff',\n    fontWeight: 'bold',\n    fontSize: 16\n  },\n  text: {\n    color: '#fff'\n  },\n  link: {\n    color: '#1B95E0'\n  },\n  button: {\n    borderRadius: 3,\n    padding: 20,\n    marginVertical: 10,\n    marginTop: 10,\n    backgroundColor: '#1B95E0'\n  },\n  buttonText: {\n    color: '#fff',\n    fontWeight: 'bold',\n    fontSize: 16\n  }\n});\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useRef","useState","SafeAreaView","ScrollView","StatusBar","StyleSheet","Text","View","Platform","Pressable","Animated","Easing","useColorScheme","isNative","OS","App","wasRotated","setwasRotated","spinValue","Value","current","isDarkMode","console","log","onPress","timing","toValue","duration","easing","linear","useNativeDriver","start","spin","interpolate","inputRange","outputRange","styles","scrollView","container","require","logo","transform","rotate","button","buttonText","smallText","create","width","flex","backgroundColor","alignItems","justifyContent","height","fontSize","title","color","fontWeight","text","link","borderRadius","padding","marginVertical","marginTop"],"sources":["/Users/felipefranca/Documents/Projetos/React-Native-iOS-Android-e-Web/src/App.tsx"],"sourcesContent":["import React, {useRef, useState} from 'react';\r\nimport {\r\n  SafeAreaView,\r\n  ScrollView,\r\n  StatusBar,\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  Platform,\r\n  Pressable,\r\n  Animated,\r\n  Easing,\r\n  useColorScheme,\r\n  Linking,\r\n} from 'react-native';\r\n\r\nconst isNative = Platform.OS !== 'web';\r\n\r\nconst App = () => {\r\n  const [wasRotated, setwasRotated] = useState(false);\r\n  const spinValue = useRef(new Animated.Value(0)).current;\r\n  const isDarkMode = useColorScheme() === 'dark';\r\n\r\n  //'http://localhost:3000/logo.png'\r\n\r\n  console.log(Platform.OS);\r\n\r\n  const onPress = () => {\r\n    setwasRotated(!wasRotated);\r\n    Animated.timing(spinValue, {\r\n      toValue: wasRotated ? 0 : 1,\r\n      duration: 250,\r\n      easing: Easing.linear,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const spin = spinValue.interpolate({\r\n    inputRange: [0, 1],\r\n    outputRange: ['0deg', '360deg'],\r\n  });\r\n\r\n  return (\r\n    <SafeAreaView style={styles.scrollView}>\r\n      <StatusBar barStyle={isDarkMode ? 'light-content' : 'dark-content'} />\r\n      <ScrollView\r\n        contentInsetAdjustmentBehavior=\"automatic\"\r\n        style={styles.scrollView}\r\n        contentContainerStyle={styles.scrollView}>\r\n        <View style={styles.container}>\r\n          <Animated.Image\r\n            source={\r\n              isNative\r\n                ? require('./logo.png')\r\n                : 'http://localhost:3000/logo.png'\r\n            }\r\n            style={[styles.logo, {transform: [{rotate: spin}]}]}\r\n          />\r\n\r\n          <Pressable onPress={onPress} style={styles.button}>\r\n            <Text style={styles.buttonText}>\r\n              Clique para o John <Text style={styles.smallText}>dar ou</Text>\r\n              Travolta\r\n            </Text>\r\n          </Pressable>\r\n        </View>\r\n      </ScrollView>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  scrollView: {\r\n    width: '100%',\r\n    flex: 1,\r\n  },\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#282c34',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  logo: {\r\n    width: 300,\r\n    height: 300,\r\n  },\r\n  smallText: {\r\n    fontSize: 9,\r\n  },\r\n  title: {\r\n    color: '#fff',\r\n    fontWeight: 'bold',\r\n    fontSize: 16,\r\n  },\r\n  text: {\r\n    color: '#fff',\r\n  },\r\n  link: {\r\n    color: '#1B95E0',\r\n  },\r\n  button: {\r\n    borderRadius: 3,\r\n    padding: 20,\r\n    marginVertical: 10,\r\n    marginTop: 10,\r\n    backgroundColor: '#1B95E0',\r\n  },\r\n  buttonText: {\r\n    color: '#fff',\r\n    fontWeight: 'bold',\r\n    fontSize: 16,\r\n  },\r\n});\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}